/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			SRAM-SP SRAM Generator
 *           			TSMC CL018G
 *      version:		2004Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_1024x8" -words 1024 -bits 8 -frequency 1 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD_1024x8
 *      Words:          1024
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        fast@-40C
 *      Delays:		min
 *
 *      Creation Date:  2013-11-04 20:50:19Z
 *      Version:        2004Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-11-04 20:50:19Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: -40.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast@-40C) {
		process	 : 1;
		temperature	 : -40.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast@-40C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_1024x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_1024x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_1024x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_1024x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_1024x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_1024x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 10;
		bit_from : 9;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_1024x8) {
	area		 : 98816.873;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 10;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : RA1SHD_1024x8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.745, 0.753, 0.773, 0.814, 0.884, 1.093, 1.310", \
			  "0.744, 0.753, 0.773, 0.814, 0.884, 1.093, 1.310", \
			  "0.744, 0.752, 0.772, 0.814, 0.883, 1.092, 1.310", \
			  "0.743, 0.751, 0.771, 0.813, 0.882, 1.092, 1.309", \
			  "0.742, 0.750, 0.770, 0.811, 0.881, 1.090, 1.308", \
			  "0.740, 0.749, 0.769, 0.810, 0.880, 1.089, 1.306", \
			  "0.739, 0.747, 0.767, 0.809, 0.878, 1.087, 1.305" \
			)
			}
			rise_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.036, 0.059, 0.128, 0.272, 0.513, 1.238, 1.991")
			}
			cell_fall(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.745, 0.753, 0.773, 0.814, 0.884, 1.093, 1.310", \
			  "0.744, 0.753, 0.773, 0.814, 0.884, 1.093, 1.310", \
			  "0.744, 0.752, 0.772, 0.814, 0.883, 1.092, 1.310", \
			  "0.743, 0.751, 0.771, 0.813, 0.882, 1.092, 1.309", \
			  "0.742, 0.750, 0.770, 0.811, 0.881, 1.090, 1.308", \
			  "0.740, 0.749, 0.769, 0.810, 0.880, 1.089, 1.306", \
			  "0.739, 0.747, 0.767, 0.809, 0.878, 1.087, 1.305" \
			)
			}
			fall_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.035, 0.047, 0.083, 0.159, 0.285, 0.666, 1.062")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.343, 0.354, 0.385, 0.420, 0.420, 0.420, 0.420", \
			  "0.350, 0.360, 0.392, 0.420, 0.420, 0.420, 0.420", \
			  "0.375, 0.385, 0.416, 0.419, 0.419, 0.419, 0.419", \
			  "0.417, 0.417, 0.417, 0.417, 0.417, 0.417, 0.417", \
			  "0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.414", \
			  "0.410, 0.410, 0.410, 0.410, 0.410, 0.410, 0.410", \
			  "0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407" \
			)
                       }
			rise_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.036, 0.059, 0.128, 0.272, 0.513, 1.238, 1.991")
			}
			cell_fall(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.303, 0.310, 0.330, 0.371, 0.420, 0.420, 0.420", \
			  "0.310, 0.316, 0.336, 0.378, 0.420, 0.420, 0.420", \
			  "0.334, 0.341, 0.361, 0.402, 0.419, 0.419, 0.419", \
			  "0.384, 0.390, 0.410, 0.417, 0.417, 0.417, 0.417", \
			  "0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.414", \
			  "0.410, 0.410, 0.410, 0.410, 0.410, 0.410, 0.410", \
			  "0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407" \
			)
			}
			fall_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.035, 0.047, 0.083, 0.159, 0.285, 0.666, 1.062")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.343, 0.354, 0.385, 0.420, 0.420, 0.420, 0.420", \
			  "0.350, 0.360, 0.392, 0.420, 0.420, 0.420, 0.420", \
			  "0.375, 0.385, 0.416, 0.419, 0.419, 0.419, 0.419", \
			  "0.417, 0.417, 0.417, 0.417, 0.417, 0.417, 0.417", \
			  "0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.414", \
			  "0.410, 0.410, 0.410, 0.410, 0.410, 0.410, 0.410", \
			  "0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407" \
			)
                       }
			rise_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.036, 0.059, 0.128, 0.272, 0.513, 1.238, 1.991")
			}
			cell_fall(RA1SHD_1024x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.303, 0.310, 0.330, 0.371, 0.420, 0.420, 0.420", \
			  "0.310, 0.316, 0.336, 0.378, 0.420, 0.420, 0.420", \
			  "0.334, 0.341, 0.361, 0.402, 0.419, 0.419, 0.419", \
			  "0.384, 0.390, 0.410, 0.417, 0.417, 0.417, 0.417", \
			  "0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.414", \
			  "0.410, 0.410, 0.410, 0.410, 0.410, 0.410, 0.410", \
			  "0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407" \
			)
			}
			fall_transition(RA1SHD_1024x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.035, 0.047, 0.083, 0.159, 0.285, 0.666, 1.062")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.282
		clock	: true;
		min_pulse_width_low	: 0.096;
		min_pulse_width_high	: 0.075;
		min_period		: 0.753;
		max_transition		: 2.000;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(RA1SHD_1024x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("104.047, 104.047")
        		}
        		fall_power(RA1SHD_1024x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(RA1SHD_1024x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("116.776, 116.776")
			}	
			fall_power(RA1SHD_1024x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_1024x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.064, 0.064")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.440", \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.440", \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.441", \
			  "0.254, 0.252, 0.246, 0.234, 0.301, 0.371, 0.441", \
			  "0.255, 0.254, 0.248, 0.235, 0.302, 0.373, 0.443", \
			  "0.257, 0.255, 0.249, 0.237, 0.304, 0.374, 0.444", \
			  "0.258, 0.256, 0.250, 0.238, 0.305, 0.375, 0.446" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.440", \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.440", \
			  "0.253, 0.251, 0.245, 0.233, 0.300, 0.370, 0.441", \
			  "0.254, 0.252, 0.246, 0.234, 0.301, 0.371, 0.441", \
			  "0.255, 0.254, 0.248, 0.235, 0.302, 0.373, 0.443", \
			  "0.257, 0.255, 0.249, 0.237, 0.304, 0.374, 0.444", \
			  "0.258, 0.256, 0.250, 0.238, 0.305, 0.375, 0.446" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.026, 0.046", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.025, 0.046", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.025, 0.045", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.024, 0.044", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.023, 0.043", \
			  "0.000, 0.000, 0.000, 0.000, 0.001, 0.021, 0.042", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.020, 0.040" \
			)
				
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.026, 0.046", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.025, 0.046", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.025, 0.045", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.024, 0.044", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.023, 0.043", \
			  "0.000, 0.000, 0.000, 0.000, 0.001, 0.021, 0.042", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.020, 0.040" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.218, 0.224, 0.244, 0.284, 0.352, 0.419, 0.487", \
			  "0.218, 0.224, 0.244, 0.284, 0.352, 0.419, 0.487", \
			  "0.219, 0.224, 0.244, 0.285, 0.352, 0.420, 0.487", \
			  "0.219, 0.225, 0.245, 0.286, 0.353, 0.421, 0.488", \
			  "0.221, 0.226, 0.247, 0.287, 0.355, 0.422, 0.490", \
			  "0.222, 0.228, 0.248, 0.288, 0.356, 0.423, 0.491", \
			  "0.224, 0.229, 0.249, 0.290, 0.357, 0.425, 0.492" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.218, 0.224, 0.244, 0.284, 0.352, 0.419, 0.487", \
			  "0.218, 0.224, 0.244, 0.284, 0.352, 0.419, 0.487", \
			  "0.219, 0.224, 0.244, 0.285, 0.352, 0.420, 0.487", \
			  "0.219, 0.225, 0.245, 0.286, 0.353, 0.421, 0.488", \
			  "0.221, 0.226, 0.247, 0.287, 0.355, 0.422, 0.490", \
			  "0.222, 0.228, 0.248, 0.288, 0.356, 0.423, 0.491", \
			  "0.224, 0.229, 0.249, 0.290, 0.357, 0.425, 0.492" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_1024x8_ADDRESS;
		direction : input;
		capacitance : 0.054;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.186, 0.185, 0.182, 0.175, 0.214, 0.263, 0.312", \
			  "0.186, 0.185, 0.182, 0.175, 0.214, 0.263, 0.312", \
			  "0.187, 0.186, 0.182, 0.176, 0.214, 0.264, 0.313", \
			  "0.188, 0.187, 0.183, 0.177, 0.215, 0.264, 0.314", \
			  "0.189, 0.188, 0.185, 0.178, 0.217, 0.266, 0.315", \
			  "0.190, 0.189, 0.186, 0.179, 0.218, 0.267, 0.316", \
			  "0.192, 0.191, 0.187, 0.181, 0.219, 0.269, 0.318" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.186, 0.185, 0.182, 0.175, 0.214, 0.263, 0.312", \
			  "0.186, 0.185, 0.182, 0.175, 0.214, 0.263, 0.312", \
			  "0.187, 0.186, 0.182, 0.176, 0.214, 0.264, 0.313", \
			  "0.188, 0.187, 0.183, 0.177, 0.215, 0.264, 0.314", \
			  "0.189, 0.188, 0.185, 0.178, 0.217, 0.266, 0.315", \
			  "0.190, 0.189, 0.186, 0.179, 0.218, 0.267, 0.316", \
			  "0.192, 0.191, 0.187, 0.181, 0.219, 0.269, 0.318" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.044, 0.045, 0.049, 0.055, 0.067, 0.078, 0.089", \
			  "0.044, 0.045, 0.049, 0.055, 0.067, 0.078, 0.089", \
			  "0.044, 0.045, 0.048, 0.055, 0.066, 0.077, 0.089", \
			  "0.043, 0.044, 0.047, 0.054, 0.065, 0.076, 0.088", \
			  "0.042, 0.043, 0.046, 0.053, 0.064, 0.075, 0.086", \
			  "0.040, 0.041, 0.045, 0.051, 0.063, 0.074, 0.085", \
			  "0.039, 0.040, 0.043, 0.050, 0.061, 0.072, 0.084" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_1024x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.791, 1.791")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_1024x8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.121, 0.120, 0.116, 0.151, 0.231, 0.311, 0.391", \
			  "0.121, 0.120, 0.116, 0.151, 0.231, 0.311, 0.391", \
			  "0.121, 0.120, 0.117, 0.151, 0.231, 0.311, 0.391", \
			  "0.122, 0.121, 0.117, 0.152, 0.232, 0.312, 0.392", \
			  "0.123, 0.122, 0.119, 0.154, 0.234, 0.314, 0.393", \
			  "0.125, 0.124, 0.120, 0.155, 0.235, 0.315, 0.395", \
			  "0.126, 0.125, 0.122, 0.156, 0.236, 0.316, 0.396" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.121, 0.120, 0.116, 0.151, 0.231, 0.311, 0.391", \
			  "0.121, 0.120, 0.116, 0.151, 0.231, 0.311, 0.391", \
			  "0.121, 0.120, 0.117, 0.151, 0.231, 0.311, 0.391", \
			  "0.122, 0.121, 0.117, 0.152, 0.232, 0.312, 0.392", \
			  "0.123, 0.122, 0.119, 0.154, 0.234, 0.314, 0.393", \
			  "0.125, 0.124, 0.120, 0.155, 0.235, 0.315, 0.395", \
			  "0.126, 0.125, 0.122, 0.156, 0.236, 0.316, 0.396" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD_1024x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.003;
  }
}
