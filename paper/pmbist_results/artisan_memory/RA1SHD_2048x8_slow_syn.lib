/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			SRAM-SP SRAM Generator
 *           			TSMC CL018G
 *      version:		2004Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x8" -words 2048 -bits 8 -frequency 1 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD_2048x8
 *      Words:          2048
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2013-11-04 20:46:29Z
 *      Version:        2004Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-11-04 20:46:29Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.620;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 4.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(slow) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.620;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : slow;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x8) {
	area		 : 156604.515;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "2.129, 2.151, 2.215, 2.348, 2.571, 3.242, 3.940", \
			  "2.136, 2.157, 2.221, 2.354, 2.578, 3.248, 3.946", \
			  "2.159, 2.180, 2.244, 2.377, 2.600, 3.271, 3.969", \
			  "2.204, 2.226, 2.290, 2.423, 2.646, 3.317, 4.015", \
			  "2.281, 2.302, 2.366, 2.499, 2.723, 3.394, 4.092", \
			  "2.511, 2.532, 2.596, 2.729, 2.953, 3.624, 4.321", \
			  "2.741, 2.762, 2.826, 2.959, 3.183, 3.854, 4.551" \
			)
			}
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.075, 0.121, 0.261, 0.553, 1.043, 2.513, 4.041")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "2.123, 2.136, 2.177, 2.262, 2.404, 2.831, 3.275", \
			  "2.129, 2.142, 2.183, 2.268, 2.410, 2.837, 3.281", \
			  "2.152, 2.165, 2.206, 2.291, 2.433, 2.860, 3.304", \
			  "2.198, 2.211, 2.252, 2.337, 2.479, 2.906, 3.350", \
			  "2.274, 2.288, 2.329, 2.413, 2.556, 2.983, 3.427", \
			  "2.504, 2.518, 2.558, 2.643, 2.786, 3.213, 3.657", \
			  "2.734, 2.747, 2.788, 2.873, 3.015, 3.442, 3.886" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.068, 0.093, 0.170, 0.329, 0.596, 1.399, 2.233")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.940, 0.940, 0.940, 1.044, 1.268, 1.939, 2.636", \
			  "0.943, 0.943, 0.943, 1.049, 1.273, 1.944, 2.641", \
			  "0.955, 0.955, 0.955, 1.068, 1.292, 1.963, 2.661", \
			  "0.980, 0.980, 0.980, 1.107, 1.330, 2.001, 2.699", \
			  "1.021, 1.021, 1.037, 1.171, 1.394, 2.065, 2.763", \
			  "1.145, 1.165, 1.229, 1.362, 1.586, 2.257, 2.954", \
			  "1.335, 1.357, 1.421, 1.554, 1.777, 2.448, 3.146" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.075, 0.121, 0.261, 0.553, 1.043, 2.513, 4.041")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.940, 0.940, 0.940, 0.940, 1.023, 1.450, 1.894", \
			  "0.943, 0.943, 0.943, 0.943, 1.028, 1.455, 1.899", \
			  "0.955, 0.955, 0.955, 0.955, 1.047, 1.474, 1.918", \
			  "0.980, 0.980, 0.980, 0.980, 1.086, 1.513, 1.957", \
			  "1.021, 1.021, 1.021, 1.021, 1.149, 1.577, 2.021", \
			  "1.145, 1.145, 1.145, 1.199, 1.341, 1.768, 2.212", \
			  "1.269, 1.269, 1.306, 1.390, 1.533, 1.960, 2.404" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.068, 0.093, 0.170, 0.329, 0.596, 1.399, 2.233")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.940, 0.940, 0.940, 1.044, 1.268, 1.939, 2.636", \
			  "0.943, 0.943, 0.943, 1.049, 1.273, 1.944, 2.641", \
			  "0.955, 0.955, 0.955, 1.068, 1.292, 1.963, 2.661", \
			  "0.980, 0.980, 0.980, 1.107, 1.330, 2.001, 2.699", \
			  "1.021, 1.021, 1.037, 1.171, 1.394, 2.065, 2.763", \
			  "1.145, 1.165, 1.229, 1.362, 1.586, 2.257, 2.954", \
			  "1.335, 1.357, 1.421, 1.554, 1.777, 2.448, 3.146" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.075, 0.121, 0.261, 0.553, 1.043, 2.513, 4.041")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.940, 0.940, 0.940, 0.940, 1.023, 1.450, 1.894", \
			  "0.943, 0.943, 0.943, 0.943, 1.028, 1.455, 1.899", \
			  "0.955, 0.955, 0.955, 0.955, 1.047, 1.474, 1.918", \
			  "0.980, 0.980, 0.980, 0.980, 1.086, 1.513, 1.957", \
			  "1.021, 1.021, 1.021, 1.021, 1.149, 1.577, 2.021", \
			  "1.145, 1.145, 1.145, 1.199, 1.341, 1.768, 2.212", \
			  "1.269, 1.269, 1.306, 1.390, 1.533, 1.960, 2.404" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.068, 0.093, 0.170, 0.329, 0.596, 1.399, 2.233")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.252
		clock	: true;
		min_pulse_width_low	: 0.279;
		min_pulse_width_high	: 0.188;
		min_period		: 2.134;
		max_transition		: 4.000;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("69.037, 69.037")
        		}
        		fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("78.454, 78.454")
			}	
			fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.054, 0.054")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.584, 0.585, 0.591, 0.602, 0.622, 0.698, 0.839", \
			  "0.577, 0.579, 0.585, 0.596, 0.615, 0.692, 0.833", \
			  "0.554, 0.556, 0.562, 0.573, 0.592, 0.669, 0.810", \
			  "0.509, 0.510, 0.516, 0.527, 0.546, 0.623, 0.764", \
			  "0.432, 0.433, 0.439, 0.451, 0.470, 0.547, 0.688", \
			  "0.202, 0.204, 0.209, 0.221, 0.240, 0.317, 0.458", \
			  "0.000, 0.000, 0.000, 0.000, 0.010, 0.087, 0.228" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.584, 0.585, 0.591, 0.602, 0.622, 0.698, 0.839", \
			  "0.577, 0.579, 0.585, 0.596, 0.615, 0.692, 0.833", \
			  "0.554, 0.556, 0.562, 0.573, 0.592, 0.669, 0.810", \
			  "0.509, 0.510, 0.516, 0.527, 0.546, 0.623, 0.764", \
			  "0.432, 0.433, 0.439, 0.451, 0.470, 0.547, 0.688", \
			  "0.202, 0.204, 0.209, 0.221, 0.240, 0.317, 0.458", \
			  "0.000, 0.000, 0.000, 0.000, 0.010, 0.087, 0.228" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.070, 0.069, 0.063, 0.051, 0.032, 0.000, 0.000", \
			  "0.300, 0.298, 0.293, 0.281, 0.262, 0.205, 0.147", \
			  "0.530, 0.528, 0.522, 0.511, 0.492, 0.434, 0.377" \
			)
				
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.070, 0.069, 0.063, 0.051, 0.032, 0.000, 0.000", \
			  "0.300, 0.298, 0.293, 0.281, 0.262, 0.205, 0.147", \
			  "0.530, 0.528, 0.522, 0.511, 0.492, 0.434, 0.377" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.594, 0.598, 0.612, 0.641, 0.690, 0.835, 0.980", \
			  "0.588, 0.592, 0.606, 0.635, 0.684, 0.829, 0.974", \
			  "0.565, 0.569, 0.583, 0.612, 0.661, 0.806, 0.951", \
			  "0.519, 0.523, 0.537, 0.566, 0.615, 0.760, 0.905", \
			  "0.442, 0.446, 0.461, 0.490, 0.538, 0.683, 0.828", \
			  "0.213, 0.216, 0.231, 0.260, 0.308, 0.453, 0.599", \
			  "0.173, 0.176, 0.187, 0.209, 0.247, 0.358, 0.469" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.594, 0.598, 0.612, 0.641, 0.690, 0.835, 0.980", \
			  "0.588, 0.592, 0.606, 0.635, 0.684, 0.829, 0.974", \
			  "0.565, 0.569, 0.583, 0.612, 0.661, 0.806, 0.951", \
			  "0.519, 0.523, 0.537, 0.566, 0.615, 0.760, 0.905", \
			  "0.442, 0.446, 0.461, 0.490, 0.538, 0.683, 0.828", \
			  "0.213, 0.216, 0.231, 0.260, 0.308, 0.453, 0.599", \
			  "0.173, 0.176, 0.187, 0.209, 0.247, 0.358, 0.469" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.067, 0.063, 0.049, 0.020, 0.000, 0.000, 0.000", \
			  "0.297, 0.293, 0.279, 0.250, 0.201, 0.056, 0.000", \
			  "0.527, 0.523, 0.508, 0.479, 0.431, 0.286, 0.141" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.067, 0.063, 0.049, 0.020, 0.000, 0.000, 0.000", \
			  "0.297, 0.293, 0.279, 0.250, 0.201, 0.056, 0.000", \
			  "0.527, 0.523, 0.508, 0.479, 0.431, 0.286, 0.141" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x8_ADDRESS;
		direction : input;
		capacitance : 0.051;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.638, 0.640, 0.646, 0.658, 0.679, 0.741, 0.803", \
			  "0.632, 0.634, 0.640, 0.652, 0.673, 0.735, 0.797", \
			  "0.609, 0.611, 0.617, 0.629, 0.650, 0.712, 0.774", \
			  "0.563, 0.565, 0.571, 0.583, 0.604, 0.666, 0.728", \
			  "0.486, 0.488, 0.494, 0.507, 0.527, 0.589, 0.651", \
			  "0.257, 0.258, 0.264, 0.277, 0.297, 0.359, 0.421", \
			  "0.027, 0.028, 0.035, 0.047, 0.068, 0.130, 0.192" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.638, 0.640, 0.646, 0.658, 0.679, 0.741, 0.803", \
			  "0.632, 0.634, 0.640, 0.652, 0.673, 0.735, 0.797", \
			  "0.609, 0.611, 0.617, 0.629, 0.650, 0.712, 0.774", \
			  "0.563, 0.565, 0.571, 0.583, 0.604, 0.666, 0.728", \
			  "0.486, 0.488, 0.494, 0.507, 0.527, 0.589, 0.651", \
			  "0.257, 0.258, 0.264, 0.277, 0.297, 0.359, 0.421", \
			  "0.027, 0.028, 0.035, 0.047, 0.068, 0.130, 0.192" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.141, 0.139, 0.133, 0.121, 0.100, 0.038, 0.000", \
			  "0.147, 0.145, 0.139, 0.127, 0.106, 0.044, 0.000", \
			  "0.170, 0.168, 0.162, 0.150, 0.129, 0.067, 0.005", \
			  "0.216, 0.214, 0.208, 0.196, 0.175, 0.113, 0.051", \
			  "0.292, 0.291, 0.285, 0.272, 0.252, 0.190, 0.128", \
			  "0.522, 0.521, 0.514, 0.502, 0.481, 0.419, 0.357", \
			  "0.752, 0.750, 0.744, 0.732, 0.711, 0.649, 0.587" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.029, 0.026, 0.017, 0.000, 0.000, 0.000, 0.000", \
			  "0.075, 0.072, 0.063, 0.045, 0.015, 0.000, 0.000", \
			  "0.151, 0.149, 0.140, 0.122, 0.092, 0.002, 0.000", \
			  "0.381, 0.379, 0.370, 0.352, 0.322, 0.232, 0.143", \
			  "0.611, 0.608, 0.599, 0.582, 0.552, 0.462, 0.372" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.035, 1.035")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.370, 0.372, 0.382, 0.401, 0.434, 0.530, 0.655", \
			  "0.364, 0.366, 0.376, 0.395, 0.428, 0.524, 0.649", \
			  "0.341, 0.343, 0.353, 0.372, 0.405, 0.501, 0.626", \
			  "0.295, 0.297, 0.307, 0.326, 0.359, 0.455, 0.580", \
			  "0.218, 0.221, 0.231, 0.250, 0.282, 0.379, 0.504", \
			  "0.000, 0.000, 0.001, 0.020, 0.052, 0.149, 0.274", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.044" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.370, 0.372, 0.382, 0.401, 0.434, 0.530, 0.655", \
			  "0.364, 0.366, 0.376, 0.395, 0.428, 0.524, 0.649", \
			  "0.341, 0.343, 0.353, 0.372, 0.405, 0.501, 0.626", \
			  "0.295, 0.297, 0.307, 0.326, 0.359, 0.455, 0.580", \
			  "0.218, 0.221, 0.231, 0.250, 0.282, 0.379, 0.504", \
			  "0.000, 0.000, 0.001, 0.020, 0.052, 0.149, 0.274", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.044" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.042, 0.038, 0.021, 0.000, 0.000, 0.000, 0.000", \
			  "0.119, 0.114, 0.097, 0.063, 0.006, 0.000, 0.000", \
			  "0.349, 0.344, 0.327, 0.293, 0.236, 0.065, 0.000", \
			  "0.579, 0.574, 0.557, 0.523, 0.466, 0.295, 0.125" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.042, 0.038, 0.021, 0.000, 0.000, 0.000, 0.000", \
			  "0.119, 0.114, 0.097, 0.063, 0.006, 0.000, 0.000", \
			  "0.349, 0.344, 0.327, 0.293, 0.236, 0.065, 0.000", \
			  "0.579, 0.574, 0.557, 0.523, 0.466, 0.295, 0.125" \
			)
		}	}
	}

	cell_leakage_power : 0.017;
  }
}
