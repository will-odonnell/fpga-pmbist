/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			SRAM-SP SRAM Generator
 *           			TSMC CL018G
 *      version:		2004Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_128x8" -words 128 -bits 8 -frequency 1 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD_128x8
 *      Words:          128
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2013-11-04 20:56:46Z
 *      Version:        2004Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-11-04 20:56:46Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.800;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.800;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(typical) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.800;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : typical;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_128x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_128x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_128x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_128x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_128x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_128x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 7;
		bit_from : 6;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_128x8) {
	area		 : 47427.865;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 7;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : RA1SHD_128x8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.229, 1.243, 1.286, 1.377, 1.528, 1.983, 2.456", \
			  "1.231, 1.246, 1.289, 1.379, 1.531, 1.986, 2.459", \
			  "1.242, 1.256, 1.300, 1.390, 1.541, 1.996, 2.469", \
			  "1.263, 1.277, 1.320, 1.411, 1.562, 2.017, 2.490", \
			  "1.297, 1.312, 1.355, 1.445, 1.597, 2.052, 2.525", \
			  "1.367, 1.381, 1.424, 1.515, 1.666, 2.121, 2.594", \
			  "1.422, 1.436, 1.480, 1.570, 1.722, 2.177, 2.650" \
			)
			}
			rise_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.228, 1.237, 1.263, 1.318, 1.411, 1.687, 1.975", \
			  "1.231, 1.240, 1.266, 1.321, 1.413, 1.690, 1.977", \
			  "1.241, 1.250, 1.277, 1.331, 1.424, 1.700, 1.988", \
			  "1.262, 1.271, 1.297, 1.352, 1.444, 1.721, 2.009", \
			  "1.297, 1.306, 1.332, 1.387, 1.479, 1.756, 2.043", \
			  "1.366, 1.375, 1.401, 1.456, 1.548, 1.825, 2.113", \
			  "1.422, 1.431, 1.457, 1.512, 1.604, 1.881, 2.168" \
			)
			}
			fall_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.650, 0.802, 1.257, 1.730", \
			  "0.594, 0.594, 0.594, 0.656, 0.808, 1.263, 1.736", \
			  "0.597, 0.597, 0.597, 0.677, 0.829, 1.284, 1.757", \
			  "0.603, 0.603, 0.630, 0.721, 0.872, 1.327, 1.800", \
			  "0.645, 0.659, 0.703, 0.793, 0.945, 1.400, 1.873", \
			  "0.789, 0.804, 0.847, 0.937, 1.089, 1.544, 2.017", \
			  "0.904, 0.919, 0.962, 1.053, 1.204, 1.659, 2.132" \
			)
                       }
			rise_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.593, 0.630, 0.907, 1.195", \
			  "0.594, 0.594, 0.594, 0.594, 0.636, 0.913, 1.200", \
			  "0.597, 0.597, 0.597, 0.597, 0.658, 0.934, 1.222", \
			  "0.603, 0.603, 0.603, 0.609, 0.701, 0.978, 1.265", \
			  "0.614, 0.614, 0.626, 0.681, 0.773, 1.050, 1.337", \
			  "0.735, 0.744, 0.770, 0.825, 0.917, 1.194, 1.482", \
			  "0.851, 0.859, 0.886, 0.941, 1.033, 1.309, 1.597" \
			)
			}
			fall_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.650, 0.802, 1.257, 1.730", \
			  "0.594, 0.594, 0.594, 0.656, 0.808, 1.263, 1.736", \
			  "0.597, 0.597, 0.597, 0.677, 0.829, 1.284, 1.757", \
			  "0.603, 0.603, 0.630, 0.721, 0.872, 1.327, 1.800", \
			  "0.645, 0.659, 0.703, 0.793, 0.945, 1.400, 1.873", \
			  "0.789, 0.804, 0.847, 0.937, 1.089, 1.544, 2.017", \
			  "0.904, 0.919, 0.962, 1.053, 1.204, 1.659, 2.132" \
			)
                       }
			rise_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_128x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.593, 0.630, 0.907, 1.195", \
			  "0.594, 0.594, 0.594, 0.594, 0.636, 0.913, 1.200", \
			  "0.597, 0.597, 0.597, 0.597, 0.658, 0.934, 1.222", \
			  "0.603, 0.603, 0.603, 0.609, 0.701, 0.978, 1.265", \
			  "0.614, 0.614, 0.626, 0.681, 0.773, 1.050, 1.337", \
			  "0.735, 0.744, 0.770, 0.825, 0.917, 1.194, 1.482", \
			  "0.851, 0.859, 0.886, 0.941, 1.033, 1.309, 1.597" \
			)
			}
			fall_transition(RA1SHD_128x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.273
		clock	: true;
		min_pulse_width_low	: 0.157;
		min_pulse_width_high	: 0.105;
		min_period		: 1.163;
		max_transition		: 2.800;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(RA1SHD_128x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("80.818, 80.818")
        		}
        		fall_power(RA1SHD_128x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(RA1SHD_128x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("89.944, 89.944")
			}	
			fall_power(RA1SHD_128x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_128x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.055, 0.055")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.362, 0.362, 0.359, 0.355, 0.376, 0.495, 0.591", \
			  "0.360, 0.359, 0.357, 0.352, 0.373, 0.493, 0.588", \
			  "0.349, 0.349, 0.346, 0.342, 0.363, 0.482, 0.578", \
			  "0.328, 0.328, 0.325, 0.321, 0.342, 0.461, 0.557", \
			  "0.294, 0.293, 0.291, 0.286, 0.307, 0.427, 0.522", \
			  "0.224, 0.224, 0.221, 0.217, 0.238, 0.357, 0.453", \
			  "0.169, 0.168, 0.166, 0.161, 0.182, 0.302, 0.398" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.362, 0.362, 0.359, 0.355, 0.376, 0.495, 0.591", \
			  "0.360, 0.359, 0.357, 0.352, 0.373, 0.493, 0.588", \
			  "0.349, 0.349, 0.346, 0.342, 0.363, 0.482, 0.578", \
			  "0.328, 0.328, 0.325, 0.321, 0.342, 0.461, 0.557", \
			  "0.294, 0.293, 0.291, 0.286, 0.307, 0.427, 0.522", \
			  "0.224, 0.224, 0.221, 0.217, 0.238, 0.357, 0.453", \
			  "0.169, 0.168, 0.166, 0.161, 0.182, 0.302, 0.398" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.027", \
			  "0.018, 0.018, 0.021, 0.025, 0.033, 0.049, 0.061", \
			  "0.087, 0.088, 0.090, 0.095, 0.102, 0.118, 0.131", \
			  "0.142, 0.143, 0.145, 0.150, 0.158, 0.174, 0.186" \
			)
				
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.027", \
			  "0.018, 0.018, 0.021, 0.025, 0.033, 0.049, 0.061", \
			  "0.087, 0.088, 0.090, 0.095, 0.102, 0.118, 0.131", \
			  "0.142, 0.143, 0.145, 0.150, 0.158, 0.174, 0.186" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.340, 0.344, 0.362, 0.396, 0.454, 0.570, 0.663", \
			  "0.337, 0.341, 0.359, 0.394, 0.452, 0.567, 0.660", \
			  "0.326, 0.331, 0.348, 0.383, 0.441, 0.557, 0.650", \
			  "0.306, 0.310, 0.328, 0.362, 0.420, 0.536, 0.629", \
			  "0.271, 0.276, 0.293, 0.328, 0.386, 0.501, 0.594", \
			  "0.202, 0.206, 0.224, 0.258, 0.316, 0.432, 0.525", \
			  "0.146, 0.151, 0.168, 0.203, 0.261, 0.377, 0.469" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.340, 0.344, 0.362, 0.396, 0.454, 0.570, 0.663", \
			  "0.337, 0.341, 0.359, 0.394, 0.452, 0.567, 0.660", \
			  "0.326, 0.331, 0.348, 0.383, 0.441, 0.557, 0.650", \
			  "0.306, 0.310, 0.328, 0.362, 0.420, 0.536, 0.629", \
			  "0.271, 0.276, 0.293, 0.328, 0.386, 0.501, 0.594", \
			  "0.202, 0.206, 0.224, 0.258, 0.316, 0.432, 0.525", \
			  "0.146, 0.151, 0.168, 0.203, 0.261, 0.377, 0.469" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.019, 0.002, 0.000, 0.000, 0.000, 0.000", \
			  "0.093, 0.089, 0.071, 0.037, 0.000, 0.000, 0.000", \
			  "0.149, 0.144, 0.127, 0.092, 0.034, 0.006, 0.000" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.019, 0.002, 0.000, 0.000, 0.000, 0.000", \
			  "0.093, 0.089, 0.071, 0.037, 0.000, 0.000, 0.000", \
			  "0.149, 0.144, 0.127, 0.092, 0.034, 0.006, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_128x8_ADDRESS;
		direction : input;
		capacitance : 0.053;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.299, 0.299, 0.298, 0.297, 0.295, 0.345, 0.411", \
			  "0.296, 0.296, 0.295, 0.294, 0.292, 0.342, 0.408", \
			  "0.286, 0.285, 0.285, 0.284, 0.282, 0.332, 0.398", \
			  "0.265, 0.265, 0.264, 0.263, 0.261, 0.311, 0.377", \
			  "0.230, 0.230, 0.229, 0.228, 0.226, 0.277, 0.342", \
			  "0.161, 0.161, 0.160, 0.159, 0.157, 0.207, 0.273", \
			  "0.105, 0.105, 0.105, 0.103, 0.102, 0.152, 0.218" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.299, 0.299, 0.298, 0.297, 0.295, 0.345, 0.411", \
			  "0.296, 0.296, 0.295, 0.294, 0.292, 0.342, 0.408", \
			  "0.286, 0.285, 0.285, 0.284, 0.282, 0.332, 0.398", \
			  "0.265, 0.265, 0.264, 0.263, 0.261, 0.311, 0.377", \
			  "0.230, 0.230, 0.229, 0.228, 0.226, 0.277, 0.342", \
			  "0.161, 0.161, 0.160, 0.159, 0.157, 0.207, 0.273", \
			  "0.105, 0.105, 0.105, 0.103, 0.102, 0.152, 0.218" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.044, 0.044, 0.045, 0.046, 0.048, 0.052, 0.054", \
			  "0.047, 0.047, 0.048, 0.049, 0.051, 0.054, 0.057", \
			  "0.057, 0.058, 0.058, 0.059, 0.061, 0.065, 0.068", \
			  "0.078, 0.078, 0.079, 0.080, 0.082, 0.086, 0.088", \
			  "0.113, 0.113, 0.114, 0.115, 0.117, 0.120, 0.123", \
			  "0.182, 0.182, 0.183, 0.184, 0.186, 0.190, 0.192", \
			  "0.238, 0.238, 0.238, 0.240, 0.241, 0.245, 0.248" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.078, 0.075, 0.062, 0.038, 0.000, 0.000, 0.000", \
			  "0.133, 0.130, 0.118, 0.093, 0.052, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_128x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.885, 1.885")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_128x8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.205, 0.205, 0.205, 0.206, 0.260, 0.397, 0.505", \
			  "0.202, 0.202, 0.203, 0.204, 0.258, 0.394, 0.503", \
			  "0.192, 0.192, 0.192, 0.193, 0.247, 0.383, 0.492", \
			  "0.171, 0.171, 0.172, 0.173, 0.226, 0.363, 0.472", \
			  "0.136, 0.136, 0.137, 0.138, 0.192, 0.328, 0.437", \
			  "0.067, 0.067, 0.067, 0.069, 0.122, 0.259, 0.368", \
			  "0.011, 0.012, 0.012, 0.013, 0.067, 0.203, 0.312" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.205, 0.205, 0.205, 0.206, 0.260, 0.397, 0.505", \
			  "0.202, 0.202, 0.203, 0.204, 0.258, 0.394, 0.503", \
			  "0.192, 0.192, 0.192, 0.193, 0.247, 0.383, 0.492", \
			  "0.171, 0.171, 0.172, 0.173, 0.226, 0.363, 0.472", \
			  "0.136, 0.136, 0.137, 0.138, 0.192, 0.328, 0.437", \
			  "0.067, 0.067, 0.067, 0.069, 0.122, 0.259, 0.368", \
			  "0.011, 0.012, 0.012, 0.013, 0.067, 0.203, 0.312" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.045, 0.040, 0.019, 0.000, 0.000, 0.000, 0.000", \
			  "0.114, 0.109, 0.089, 0.048, 0.000, 0.000, 0.000", \
			  "0.170, 0.165, 0.144, 0.103, 0.052, 0.048, 0.046" \
			)
			}
			fall_constraint(RA1SHD_128x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.045, 0.040, 0.019, 0.000, 0.000, 0.000, 0.000", \
			  "0.114, 0.109, 0.089, 0.048, 0.000, 0.000, 0.000", \
			  "0.170, 0.165, 0.144, 0.103, 0.052, 0.048, 0.046" \
			)
		}	}
	}

	cell_leakage_power : 0.002;
  }
}
