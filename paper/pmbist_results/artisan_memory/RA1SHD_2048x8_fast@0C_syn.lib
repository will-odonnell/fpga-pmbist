/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			SRAM-SP SRAM Generator
 *           			TSMC CL018G
 *      version:		2004Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x8" -words 2048 -bits 8 -frequency 1 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD_2048x8
 *      Words:          2048
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        fast@0C
 *      Delays:		min
 *
 *      Creation Date:  2013-11-04 20:46:25Z
 *      Version:        2004Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-11-04 20:46:25Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast@0C) {
		process	 : 1;
		temperature	 : 0.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast@0C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x8) {
	area		 : 156604.515;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.869, 0.942, 1.161, 1.389", \
			  "0.797, 0.805, 0.826, 0.869, 0.942, 1.162, 1.390", \
			  "0.797, 0.805, 0.826, 0.870, 0.943, 1.162, 1.390", \
			  "0.798, 0.806, 0.827, 0.870, 0.943, 1.163, 1.391" \
			)
			}
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.049, 0.072, 0.141, 0.285, 0.527, 1.252, 2.005")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.868, 0.941, 1.161, 1.389", \
			  "0.796, 0.804, 0.825, 0.869, 0.942, 1.161, 1.389", \
			  "0.797, 0.805, 0.826, 0.869, 0.942, 1.162, 1.390", \
			  "0.797, 0.805, 0.826, 0.870, 0.943, 1.162, 1.390", \
			  "0.798, 0.806, 0.827, 0.870, 0.943, 1.163, 1.391" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.032, 0.045, 0.083, 0.162, 0.296, 0.695, 1.111")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.360, 0.371, 0.403, 0.470, 0.470, 0.470, 0.470", \
			  "0.366, 0.377, 0.410, 0.470, 0.470, 0.470, 0.470", \
			  "0.390, 0.401, 0.434, 0.470, 0.470, 0.470, 0.470", \
			  "0.439, 0.450, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.049, 0.072, 0.141, 0.285, 0.527, 1.252, 2.005")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.318, 0.325, 0.345, 0.389, 0.462, 0.470, 0.470", \
			  "0.324, 0.331, 0.352, 0.395, 0.469, 0.470, 0.470", \
			  "0.348, 0.355, 0.376, 0.420, 0.470, 0.470, 0.470", \
			  "0.397, 0.404, 0.425, 0.468, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.032, 0.045, 0.083, 0.162, 0.296, 0.695, 1.111")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.360, 0.371, 0.403, 0.470, 0.470, 0.470, 0.470", \
			  "0.366, 0.377, 0.410, 0.470, 0.470, 0.470, 0.470", \
			  "0.390, 0.401, 0.434, 0.470, 0.470, 0.470, 0.470", \
			  "0.439, 0.450, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.049, 0.072, 0.141, 0.285, 0.527, 1.252, 2.005")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.318, 0.325, 0.345, 0.389, 0.462, 0.470, 0.470", \
			  "0.324, 0.331, 0.352, 0.395, 0.469, 0.470, 0.470", \
			  "0.348, 0.355, 0.376, 0.420, 0.470, 0.470, 0.470", \
			  "0.397, 0.404, 0.425, 0.468, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470", \
			  "0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.032, 0.045, 0.083, 0.162, 0.296, 0.695, 1.111")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.283
		clock	: true;
		min_pulse_width_low	: 0.102;
		min_pulse_width_high	: 0.081;
		min_period		: 0.838;
		max_transition		: 2.000;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("108.947, 108.947")
        		}
        		fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("123.538, 123.538")
			}	
			fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.060, 0.060")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.267, 0.266, 0.260, 0.250, 0.307, 0.375, 0.443", \
			  "0.267, 0.266, 0.260, 0.250, 0.307, 0.375, 0.443", \
			  "0.267, 0.266, 0.260, 0.250, 0.306, 0.375, 0.443", \
			  "0.267, 0.265, 0.260, 0.249, 0.306, 0.374, 0.442", \
			  "0.266, 0.265, 0.259, 0.249, 0.306, 0.374, 0.442", \
			  "0.266, 0.264, 0.259, 0.248, 0.305, 0.373, 0.441", \
			  "0.265, 0.264, 0.258, 0.248, 0.304, 0.373, 0.441" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.267, 0.266, 0.260, 0.250, 0.307, 0.375, 0.443", \
			  "0.267, 0.266, 0.260, 0.250, 0.307, 0.375, 0.443", \
			  "0.267, 0.266, 0.260, 0.250, 0.306, 0.375, 0.443", \
			  "0.267, 0.265, 0.260, 0.249, 0.306, 0.374, 0.442", \
			  "0.266, 0.265, 0.259, 0.249, 0.306, 0.374, 0.442", \
			  "0.266, 0.264, 0.259, 0.248, 0.305, 0.373, 0.441", \
			  "0.265, 0.264, 0.258, 0.248, 0.304, 0.373, 0.441" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.038", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.038", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.039", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.021, 0.039", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.022, 0.040", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.022, 0.040", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.023, 0.041" \
			)
				
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.038", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.038", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.021, 0.039", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.021, 0.039", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.022, 0.040", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.022, 0.040", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.023, 0.041" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.218, 0.223, 0.243, 0.282, 0.348, 0.414, 0.479", \
			  "0.218, 0.223, 0.243, 0.282, 0.348, 0.414, 0.479", \
			  "0.217, 0.223, 0.242, 0.282, 0.348, 0.413, 0.479", \
			  "0.217, 0.222, 0.242, 0.282, 0.347, 0.413, 0.479", \
			  "0.217, 0.222, 0.242, 0.281, 0.347, 0.412, 0.478", \
			  "0.216, 0.221, 0.241, 0.280, 0.346, 0.412, 0.478", \
			  "0.215, 0.221, 0.240, 0.280, 0.346, 0.411, 0.477" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.218, 0.223, 0.243, 0.282, 0.348, 0.414, 0.479", \
			  "0.218, 0.223, 0.243, 0.282, 0.348, 0.414, 0.479", \
			  "0.217, 0.223, 0.242, 0.282, 0.348, 0.413, 0.479", \
			  "0.217, 0.222, 0.242, 0.282, 0.347, 0.413, 0.479", \
			  "0.217, 0.222, 0.242, 0.281, 0.347, 0.412, 0.478", \
			  "0.216, 0.221, 0.241, 0.280, 0.346, 0.412, 0.478", \
			  "0.215, 0.221, 0.240, 0.280, 0.346, 0.411, 0.477" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x8_ADDRESS;
		direction : input;
		capacitance : 0.054;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.229, 0.229, 0.226, 0.220, 0.231, 0.278, 0.326", \
			  "0.229, 0.228, 0.225, 0.220, 0.230, 0.278, 0.325", \
			  "0.228, 0.228, 0.225, 0.219, 0.230, 0.277, 0.325", \
			  "0.228, 0.227, 0.224, 0.219, 0.229, 0.277, 0.324" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.230, 0.229, 0.226, 0.221, 0.231, 0.279, 0.326", \
			  "0.229, 0.229, 0.226, 0.220, 0.231, 0.278, 0.326", \
			  "0.229, 0.228, 0.225, 0.220, 0.230, 0.278, 0.325", \
			  "0.228, 0.228, 0.225, 0.219, 0.230, 0.277, 0.325", \
			  "0.228, 0.227, 0.224, 0.219, 0.229, 0.277, 0.324" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.064, 0.065, 0.067, 0.073, 0.082, 0.091, 0.100", \
			  "0.064, 0.065, 0.067, 0.073, 0.082, 0.091, 0.100", \
			  "0.064, 0.065, 0.067, 0.073, 0.082, 0.091, 0.100", \
			  "0.064, 0.065, 0.068, 0.073, 0.082, 0.092, 0.101", \
			  "0.065, 0.066, 0.068, 0.074, 0.083, 0.092, 0.101", \
			  "0.065, 0.066, 0.069, 0.074, 0.084, 0.093, 0.102", \
			  "0.066, 0.067, 0.069, 0.075, 0.084, 0.093, 0.102" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.754, 1.754")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.305, 0.383", \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.305, 0.383", \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.304, 0.383", \
			  "0.119, 0.119, 0.116, 0.147, 0.225, 0.304, 0.383", \
			  "0.119, 0.118, 0.115, 0.146, 0.225, 0.303, 0.382", \
			  "0.118, 0.117, 0.114, 0.146, 0.224, 0.303, 0.382", \
			  "0.118, 0.117, 0.114, 0.145, 0.224, 0.302, 0.381" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.305, 0.383", \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.305, 0.383", \
			  "0.120, 0.119, 0.116, 0.147, 0.226, 0.304, 0.383", \
			  "0.119, 0.119, 0.116, 0.147, 0.225, 0.304, 0.383", \
			  "0.119, 0.118, 0.115, 0.146, 0.225, 0.303, 0.382", \
			  "0.118, 0.117, 0.114, 0.146, 0.224, 0.303, 0.382", \
			  "0.118, 0.117, 0.114, 0.145, 0.224, 0.302, 0.381" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.005;
  }
}
