/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			SRAM-SP SRAM Generator
 *           			TSMC CL018G
 *      version:		2004Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x8" -words 2048 -bits 8 -frequency 1 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD_2048x8
 *      Words:          2048
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2013-11-04 20:46:27Z
 *      Version:        2004Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-11-04 20:46:27Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.800;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.800;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(typical) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.800;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : typical;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x8) {
	area		 : 156604.515;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.245, 1.259, 1.303, 1.393, 1.545, 2.000, 2.473", \
			  "1.248, 1.262, 1.305, 1.396, 1.547, 2.002, 2.475", \
			  "1.258, 1.272, 1.316, 1.406, 1.558, 2.013, 2.486", \
			  "1.279, 1.293, 1.337, 1.427, 1.578, 2.033, 2.507", \
			  "1.313, 1.328, 1.371, 1.461, 1.613, 2.068, 2.541", \
			  "1.383, 1.397, 1.441, 1.531, 1.682, 2.137, 2.611", \
			  "1.438, 1.453, 1.496, 1.586, 1.738, 2.193, 2.666" \
			)
			}
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.242, 1.251, 1.278, 1.332, 1.425, 1.701, 1.989", \
			  "1.245, 1.254, 1.280, 1.335, 1.427, 1.704, 1.992", \
			  "1.256, 1.264, 1.291, 1.346, 1.438, 1.714, 2.002", \
			  "1.276, 1.285, 1.312, 1.366, 1.459, 1.735, 2.023", \
			  "1.311, 1.320, 1.346, 1.401, 1.493, 1.770, 2.058", \
			  "1.380, 1.389, 1.416, 1.470, 1.563, 1.839, 2.127", \
			  "1.436, 1.445, 1.471, 1.526, 1.618, 1.895, 2.182" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.650, 0.802, 1.257, 1.730", \
			  "0.594, 0.594, 0.594, 0.656, 0.808, 1.263, 1.736", \
			  "0.597, 0.597, 0.597, 0.677, 0.829, 1.284, 1.757", \
			  "0.603, 0.603, 0.630, 0.721, 0.872, 1.327, 1.800", \
			  "0.645, 0.659, 0.703, 0.793, 0.945, 1.400, 1.873", \
			  "0.789, 0.804, 0.847, 0.937, 1.089, 1.544, 2.017", \
			  "0.904, 0.919, 0.962, 1.053, 1.204, 1.659, 2.132" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.593, 0.630, 0.907, 1.195", \
			  "0.594, 0.594, 0.594, 0.594, 0.636, 0.913, 1.200", \
			  "0.597, 0.597, 0.597, 0.597, 0.658, 0.934, 1.222", \
			  "0.603, 0.603, 0.603, 0.609, 0.701, 0.978, 1.265", \
			  "0.614, 0.614, 0.626, 0.681, 0.773, 1.050, 1.337", \
			  "0.735, 0.744, 0.770, 0.825, 0.917, 1.194, 1.482", \
			  "0.851, 0.859, 0.886, 0.941, 1.033, 1.309, 1.597" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.650, 0.802, 1.257, 1.730", \
			  "0.594, 0.594, 0.594, 0.656, 0.808, 1.263, 1.736", \
			  "0.597, 0.597, 0.597, 0.677, 0.829, 1.284, 1.757", \
			  "0.603, 0.603, 0.630, 0.721, 0.872, 1.327, 1.800", \
			  "0.645, 0.659, 0.703, 0.793, 0.945, 1.400, 1.873", \
			  "0.789, 0.804, 0.847, 0.937, 1.089, 1.544, 2.017", \
			  "0.904, 0.919, 0.962, 1.053, 1.204, 1.659, 2.132" \
			)
                       }
			rise_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.058, 0.089, 0.182, 0.375, 0.700, 1.674, 2.687")
			}
			cell_fall(RA1SHD_2048x8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.593, 0.593, 0.593, 0.593, 0.630, 0.907, 1.195", \
			  "0.594, 0.594, 0.594, 0.594, 0.636, 0.913, 1.200", \
			  "0.597, 0.597, 0.597, 0.597, 0.658, 0.934, 1.222", \
			  "0.603, 0.603, 0.603, 0.609, 0.701, 0.978, 1.265", \
			  "0.614, 0.614, 0.626, 0.681, 0.773, 1.050, 1.337", \
			  "0.735, 0.744, 0.770, 0.825, 0.917, 1.194, 1.482", \
			  "0.851, 0.859, 0.886, 0.941, 1.033, 1.309, 1.597" \
			)
			}
			fall_transition(RA1SHD_2048x8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.060, 0.111, 0.216, 0.393, 0.923, 1.475")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.273
		clock	: true;
		min_pulse_width_low	: 0.157;
		min_pulse_width_high	: 0.105;
		min_period		: 1.202;
		max_transition		: 2.800;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("86.504, 86.504")
        		}
        		fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("98.100, 98.100")
			}	
			fall_power(RA1SHD_2048x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.053, 0.053")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.362, 0.362, 0.359, 0.355, 0.375, 0.495, 0.591", \
			  "0.360, 0.359, 0.357, 0.352, 0.373, 0.492, 0.588", \
			  "0.349, 0.349, 0.346, 0.342, 0.362, 0.482, 0.577", \
			  "0.328, 0.328, 0.325, 0.321, 0.341, 0.461, 0.557", \
			  "0.294, 0.293, 0.291, 0.286, 0.307, 0.426, 0.522", \
			  "0.224, 0.224, 0.221, 0.217, 0.237, 0.357, 0.453", \
			  "0.169, 0.168, 0.166, 0.161, 0.182, 0.301, 0.397" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.362, 0.362, 0.359, 0.355, 0.375, 0.495, 0.591", \
			  "0.360, 0.359, 0.357, 0.352, 0.373, 0.492, 0.588", \
			  "0.349, 0.349, 0.346, 0.342, 0.362, 0.482, 0.577", \
			  "0.328, 0.328, 0.325, 0.321, 0.341, 0.461, 0.557", \
			  "0.294, 0.293, 0.291, 0.286, 0.307, 0.426, 0.522", \
			  "0.224, 0.224, 0.221, 0.217, 0.237, 0.357, 0.453", \
			  "0.169, 0.168, 0.166, 0.161, 0.182, 0.301, 0.397" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.027", \
			  "0.018, 0.018, 0.021, 0.025, 0.033, 0.049, 0.061", \
			  "0.087, 0.088, 0.090, 0.095, 0.102, 0.118, 0.131", \
			  "0.142, 0.143, 0.145, 0.150, 0.158, 0.174, 0.186" \
			)
				
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.027", \
			  "0.018, 0.018, 0.021, 0.025, 0.033, 0.049, 0.061", \
			  "0.087, 0.088, 0.090, 0.095, 0.102, 0.118, 0.131", \
			  "0.142, 0.143, 0.145, 0.150, 0.158, 0.174, 0.186" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.327, 0.332, 0.349, 0.384, 0.442, 0.558, 0.650", \
			  "0.324, 0.329, 0.346, 0.381, 0.439, 0.555, 0.648", \
			  "0.314, 0.319, 0.336, 0.371, 0.429, 0.544, 0.637", \
			  "0.293, 0.298, 0.315, 0.350, 0.408, 0.524, 0.616", \
			  "0.259, 0.263, 0.281, 0.315, 0.373, 0.489, 0.582", \
			  "0.189, 0.194, 0.211, 0.246, 0.304, 0.420, 0.512", \
			  "0.134, 0.138, 0.156, 0.190, 0.248, 0.364, 0.457" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.327, 0.332, 0.349, 0.384, 0.442, 0.558, 0.650", \
			  "0.324, 0.329, 0.346, 0.381, 0.439, 0.555, 0.648", \
			  "0.314, 0.319, 0.336, 0.371, 0.429, 0.544, 0.637", \
			  "0.293, 0.298, 0.315, 0.350, 0.408, 0.524, 0.616", \
			  "0.259, 0.263, 0.281, 0.315, 0.373, 0.489, 0.582", \
			  "0.189, 0.194, 0.211, 0.246, 0.304, 0.420, 0.512", \
			  "0.134, 0.138, 0.156, 0.190, 0.248, 0.364, 0.457" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.034, 0.029, 0.012, 0.000, 0.000, 0.000, 0.000", \
			  "0.103, 0.099, 0.081, 0.047, 0.000, 0.000, 0.000", \
			  "0.159, 0.154, 0.137, 0.102, 0.044, 0.019, 0.003" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.034, 0.029, 0.012, 0.000, 0.000, 0.000, 0.000", \
			  "0.103, 0.099, 0.081, 0.047, 0.000, 0.000, 0.000", \
			  "0.159, 0.154, 0.137, 0.102, 0.044, 0.019, 0.003" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x8_ADDRESS;
		direction : input;
		capacitance : 0.053;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.337, 0.337, 0.336, 0.335, 0.333, 0.351, 0.417", \
			  "0.334, 0.334, 0.333, 0.332, 0.330, 0.349, 0.414", \
			  "0.323, 0.323, 0.323, 0.322, 0.320, 0.338, 0.404", \
			  "0.303, 0.303, 0.302, 0.301, 0.299, 0.317, 0.383", \
			  "0.268, 0.268, 0.267, 0.266, 0.264, 0.283, 0.349", \
			  "0.199, 0.199, 0.198, 0.197, 0.195, 0.213, 0.279", \
			  "0.143, 0.143, 0.143, 0.141, 0.140, 0.158, 0.224" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.337, 0.337, 0.336, 0.335, 0.333, 0.351, 0.417", \
			  "0.334, 0.334, 0.333, 0.332, 0.330, 0.349, 0.414", \
			  "0.323, 0.323, 0.323, 0.322, 0.320, 0.338, 0.404", \
			  "0.303, 0.303, 0.302, 0.301, 0.299, 0.317, 0.383", \
			  "0.268, 0.268, 0.267, 0.266, 0.264, 0.283, 0.349", \
			  "0.199, 0.199, 0.198, 0.197, 0.195, 0.213, 0.279", \
			  "0.143, 0.143, 0.143, 0.141, 0.140, 0.158, 0.224" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.065, 0.065, 0.066, 0.067, 0.068, 0.072, 0.075", \
			  "0.068, 0.068, 0.068, 0.069, 0.071, 0.075, 0.078", \
			  "0.078, 0.078, 0.079, 0.080, 0.082, 0.085, 0.088", \
			  "0.099, 0.099, 0.100, 0.101, 0.102, 0.106, 0.109", \
			  "0.133, 0.134, 0.134, 0.135, 0.137, 0.141, 0.144", \
			  "0.203, 0.203, 0.204, 0.205, 0.206, 0.210, 0.213", \
			  "0.258, 0.258, 0.259, 0.260, 0.262, 0.266, 0.268" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.028, 0.025, 0.013, 0.000, 0.000, 0.000, 0.000", \
			  "0.098, 0.094, 0.082, 0.057, 0.016, 0.000, 0.000", \
			  "0.153, 0.150, 0.137, 0.113, 0.072, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.344, 1.344")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.197, 0.197, 0.198, 0.199, 0.247, 0.383, 0.492", \
			  "0.194, 0.195, 0.195, 0.196, 0.244, 0.380, 0.489", \
			  "0.184, 0.184, 0.185, 0.186, 0.234, 0.370, 0.479", \
			  "0.163, 0.163, 0.164, 0.165, 0.213, 0.349, 0.458", \
			  "0.129, 0.129, 0.129, 0.130, 0.178, 0.314, 0.423", \
			  "0.059, 0.059, 0.060, 0.061, 0.109, 0.245, 0.354", \
			  "0.004, 0.004, 0.004, 0.005, 0.053, 0.190, 0.299" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.197, 0.197, 0.198, 0.199, 0.247, 0.383, 0.492", \
			  "0.194, 0.195, 0.195, 0.196, 0.244, 0.380, 0.489", \
			  "0.184, 0.184, 0.185, 0.186, 0.234, 0.370, 0.479", \
			  "0.163, 0.163, 0.164, 0.165, 0.213, 0.349, 0.458", \
			  "0.129, 0.129, 0.129, 0.130, 0.178, 0.314, 0.423", \
			  "0.059, 0.059, 0.060, 0.061, 0.109, 0.245, 0.354", \
			  "0.004, 0.004, 0.004, 0.005, 0.053, 0.190, 0.299" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.018, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.053, 0.033, 0.000, 0.000, 0.000, 0.000", \
			  "0.128, 0.122, 0.102, 0.061, 0.005, 0.002, 0.000", \
			  "0.183, 0.178, 0.157, 0.117, 0.061, 0.057, 0.055" \
			)
			}
			fall_constraint(RA1SHD_2048x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.018, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.053, 0.033, 0.000, 0.000, 0.000, 0.000", \
			  "0.128, 0.122, 0.102, 0.061, 0.005, 0.002, 0.000", \
			  "0.183, 0.178, 0.157, 0.117, 0.061, 0.057, 0.055" \
			)
		}	}
	}

	cell_leakage_power : 0.003;
  }
}
